buildscript {
	ext {
        springBootVersion = '2.2.1.RELEASE'
    }
    repositories {
    	maven { url 'https://maven.aliyun.com/repository/public/' }
        jcenter()
        mavenCentral()
    }
    dependencies {
       classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

plugins {
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id "base"
	id 'eclipse'
}
apply plugin: 'org.springframework.boot'
repositories {
	mavenCentral()
}
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-freemarker'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-tomcat'
	
	implementation 'mysql:mysql-connector-java'
	implementation group: 'com.alibaba', name: 'druid-spring-boot-starter', version: '1.1.21'
	implementation group: 'org.apache.poi', name: 'poi', version: '4.0.1'
	implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '4.0.1'
	implementation group: 'com.alibaba', name: 'fastjson', version: '1.2.62'
	
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

import org.apache.tools.ant.filters.ReplaceTokens
def profileName = project.hasProperty('profile') ? project.getProperty("profile") : "dev" //gradle -Pprofile=prod bootJar
processResources {
    with copySpec {
    	filteringCharset = 'UTF-8'
        from "src/main/resources/application.properties"
        filter(ReplaceTokens, tokens: [profileActive: profileName])
    }
}

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}