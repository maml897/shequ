buildscript {
    repositories {
        maven{
             url 'D:/workspace_sts_other/plugin/repo'
        }
        jcenter()
        mavenCentral()
    }
    dependencies {
       classpath "com.demon.plugin:plugin:1.0.0"
    }
}

plugins {
	id 'org.springframework.boot' version '2.2.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id "base"
}

apply plugin: 'org.gradle.sample.urlverifier'   
verification {                                  
    url = 'https://www.sbwuff.com/'
}

group = 'com.flytree'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	//implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-freemarker'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'mysql:mysql-connector-java'
	//implementation 'org.freemarker:freemarker'
	implementation 'org.springframework.boot:spring-boot-starter-tomcat'
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
	compile group: 'com.alibaba', name: 'druid-spring-boot-starter', version: '1.1.21'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}

task zip(type: Zip, group: "Archive", description: "Archives sources in a zip file") {
    from "src"
    setArchiveName "sbwuff-1.0.zip"
}

task packageDistribution(type: Zip) {
    archiveName = "my-distribution.zip"
    destinationDir = file("${buildDir}/dist")
    from "${buildDir}/toArchive"
}
//解压
task unpackFiles(type: Copy) {
    from zipTree("${buildDir}/dist/my-distribution.zip")
    into "${buildDir}/resources"
}